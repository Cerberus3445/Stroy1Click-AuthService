create schema if not exists auth;

create table if not exists auth.users(
    id bigint generated by default as identity primary key ,
    first_name varchar(30) not null ,
    last_name varchar(30) not null ,
    email varchar(50) not null unique ,
    password varchar not null ,
    role varchar not null,
    email_confirmed boolean not null
    );

create table if not exists auth.confirmation_codes(
    id bigint generated by default as identity primary key ,
    code int not null ,
    expiration_date timestamp not null ,
    type varchar not null ,
    user_id bigint references auth.users(id) on delete cascade
    );

create index on auth.users(email);

create table if not exists auth.refresh_tokens(
    id int generated by default as identity primary key,
    user_id bigint references auth.users(id) on delete cascade,
    token varchar not null,
    expiry_date timestamp not null,
    foreign key(user_id) references auth.users(id) on delete cascade
);

-- для тестов
-- Test: AuthTests login()
-- Описание: регистрация пользователя
insert into auth.users(first_name, last_name, email, password, role, email_confirmed) values ('Mike', 'Thompson', 'mike_thompson@gmail.com', '{bcrypt}$2a$12$krql2OIk1z2Dpl7Inn7Bo.ryVJqUXN5W1uEeztbgkHJnKPu7IFkFy', 'ROLE_USER',false);

-- Test: TokenIntegrationTests refreshToken()
-- Описание: обновление срока годности токена
insert into auth.refresh_tokens(user_id, token, expiry_date) values (1, '40f2a44f-31ed-4593-97fe-ab775e309988','2000-09-10 09:01:43.728681');

-- Test: TokenIntegrationTests refreshAccessToken()
-- Описание: токен для обновления access token
insert into auth.refresh_tokens(user_id, token, expiry_date) values (1, 'ba9a4691-ff6d-45eb-857f-1e39079ebd60','2077-09-10 09:01:43.728681');
