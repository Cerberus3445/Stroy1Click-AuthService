create schema if not exists auth;

create table if not exists auth.users(
    id bigint generated by default as identity primary key ,
    first_name varchar(30) not null ,
    last_name varchar(30) not null ,
    email varchar(50) not null unique ,
    password varchar not null ,
    role varchar not null,
    email_confirmed boolean not null
);

create table if not exists auth.confirmation_codes(
    id bigint generated by default as identity primary key ,
    code int not null ,
    expiration_date timestamp not null ,
    type varchar not null ,
    user_id bigint references auth.users(id) on delete cascade
);

create index on auth.users(email);

create table if not exists auth.refresh_tokens(
    id int generated by default as identity primary key,
    user_id bigint references auth.users(id) on delete cascade,
    token varchar not null,
    expiry_date timestamp not null,
    foreign key(user_id) references auth.users(id) on delete cascade
);

create schema if not exists product;

create table if not exists product.categories
(
    id int generated by default as identity primary key ,
    title varchar(40) not null unique,
    image varchar
);

create table if not exists product.subcategories(
    id int generated by default as identity primary key ,
    category_id int references product.categories(id) on delete cascade,
    title varchar(40) not null,
    image varchar
);

create table if not exists product.product_type(
    id int generated by default as identity primary key ,
    subcategory_id int references product.subcategories(id) on delete cascade ,
    title varchar(40) not null,
    image varchar
);

create table if not exists product.product(
    id int generated by default as identity primary key ,
    title varchar(60) not null ,
    brand varchar(60) not null ,
    description varchar(1000) ,
    price float not null ,
    in_stock boolean not null,
    category_id int references product.categories(id) on delete cascade,
    subcategory_id int references product.subcategories(id) on delete cascade,
    product_type_id int references product.product_type(id) on delete cascade
);